@model OrDragon.Models.QuestionAnswerViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.q.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.q.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.q.Text, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <table>
                @Html.LabelFor(model => model.a.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <tr>
                    <td class="col-md-8" style="width:98%">
                        @Html.EditorFor(model => model.a.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.a.Text, "", new { @class = "text-danger" })
                    </td>
                    <td><input type="radio" name="isGood" id="a" /></td>
                </tr>

                <tr>
                    <td class="col-md-8">
                        @Html.EditorFor(model => model.b.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.b.Text, "", new { @class = "text-danger" })
                    </td>
                    <td><input type="radio" name="isGood" id="b" /></td>
                </tr>

                <tr>
                    <td class="col-md-8">
                        @Html.EditorFor(model => model.c.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.c.Text, "", new { @class = "text-danger" })
                    </td>
                    <td><input type="radio" name="isGood" id="c" /></td>
                </tr>

                <tr>
                    <td class="col-md-8">
                        @Html.EditorFor(model => model.d.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.d.Text, "", new { @class = "text-danger" })
                    </td>
                    <td><input type="radio" name="isGood" id="d" /></td>
                </tr>
            </table>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.q.Difficulty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.q.Difficulty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.q.Difficulty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Create" class="btn btn-default" onclick="SendGoodAnswer" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @{
        <script>
            function SendGoodAnswer() {
                if (document.getElementById("a").checked) {

                }
            }
        </script>
    }
}
